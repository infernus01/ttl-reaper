/*
Copyright 2024 The TTL Reaper Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	ttlreaperv1alpha1 "github.com/infernus01/ttl-reaper/pkg/apis/ttlreaper/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// TTLReaperConfigLister helps list TTLReaperConfigs.
// All objects returned here must be treated as read-only.
type TTLReaperConfigLister interface {
	// List lists all TTLReaperConfigs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*ttlreaperv1alpha1.TTLReaperConfig, err error)
	// TTLReaperConfigs returns an object that can list and get TTLReaperConfigs.
	TTLReaperConfigs(namespace string) TTLReaperConfigNamespaceLister
	TTLReaperConfigListerExpansion
}

// tTLReaperConfigLister implements the TTLReaperConfigLister interface.
type tTLReaperConfigLister struct {
	listers.ResourceIndexer[*ttlreaperv1alpha1.TTLReaperConfig]
}

// NewTTLReaperConfigLister returns a new TTLReaperConfigLister.
func NewTTLReaperConfigLister(indexer cache.Indexer) TTLReaperConfigLister {
	return &tTLReaperConfigLister{listers.New[*ttlreaperv1alpha1.TTLReaperConfig](indexer, ttlreaperv1alpha1.Resource("ttlreaperconfig"))}
}

// TTLReaperConfigs returns an object that can list and get TTLReaperConfigs.
func (s *tTLReaperConfigLister) TTLReaperConfigs(namespace string) TTLReaperConfigNamespaceLister {
	return tTLReaperConfigNamespaceLister{listers.NewNamespaced[*ttlreaperv1alpha1.TTLReaperConfig](s.ResourceIndexer, namespace)}
}

// TTLReaperConfigNamespaceLister helps list and get TTLReaperConfigs.
// All objects returned here must be treated as read-only.
type TTLReaperConfigNamespaceLister interface {
	// List lists all TTLReaperConfigs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*ttlreaperv1alpha1.TTLReaperConfig, err error)
	// Get retrieves the TTLReaperConfig from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*ttlreaperv1alpha1.TTLReaperConfig, error)
	TTLReaperConfigNamespaceListerExpansion
}

// tTLReaperConfigNamespaceLister implements the TTLReaperConfigNamespaceLister
// interface.
type tTLReaperConfigNamespaceLister struct {
	listers.ResourceIndexer[*ttlreaperv1alpha1.TTLReaperConfig]
}
